/*! angular-plupload 0.1.3 */
!function () {
  "use strict";
  angular.module("angular-plupload", [])
      .provider("pluploadOption", function () {
        var a = {
          flash_swf_url: "/bower_components/plupload/js/Moxie.swf",
          silverlight_xap_url: "/bower_components/plupload/js/Moxie.xap",
          runtimes: "html5, flash, silverlight, html4",
          max_file_size: "2048mb",
          chunk_size: '500kb'
        }; return {
          setOptions: function (b) { angular.extend(a, b) },
          $get: function () { return a }
        }
      })
      .directive("plupload",
          ["$timeout", "pluploadOption", function (a, b) {
            function c(a) {
              return a.charAt(0).toLowerCase() + a.slice(1)
            }
            return {
              scope: {
                url: "=plupload",
                options: "=pluploadOptions",
                callbacks: "=pluploadCallbacks",
                filters: "=pluploadFilters",
                resize: "=pluploadResize",
              },
              link: function (a, d) {
                var e = b;
                e.url = a.url;
                if (a.filters)
                  e.filters = { mime_types: [{ title: "Custom", extensions: a.filters }] }
                if (a.resize) e.resize = { resize: { width: a.resize, height: a.resize, quality: 70 } }
                e.browse_button = d[0];
                angular.extend(e, a.options);
                var f = new plupload.Uploader(e);
                if (a.callbacks) {
                  var g = ["Init", "PostInit", "OptionChanged", "Refresh", "StateChanged", "UploadFile", "BeforeUpload", "QueueChanged", "UploadProgress", "FilesRemoved", "FileFiltered", "FilesAdded", "FileUploaded", "ChunkUploaded", "UploadComplete", "Error", "Destroy"];
                  angular.forEach(g, function (b) { var d = a.callbacks[c(b)] || angular.noop; f.bind(b, function () { d.apply(null, arguments), a.$$phase || a.$root.$$phase || a.$apply() }) })
                } f.init()
              }
            }
          }])
}();